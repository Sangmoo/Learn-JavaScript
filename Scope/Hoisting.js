

console.log(x);   // 3 (출력이 된다!! -- 호이스팅)
var x = 3;

// 하지만
console.log(y);   // error
let y = 3;

// let 의 경우는 오류를 던진다.


// 호이스팅이란 끌어올린다 라는 뜻으로
// JS 함수나 전역 스코프 전체를 살펴보고 var 로 선언한 변수를 맨 위로 끌어올린다(최상위 전역)
// 여기서 중요한 점은 선언만 끌어올려진다는 것이며, 할당은 끌어올려지지 않는다.


console.log(x); // undefined 선언이 끌어올라왔지만 할당은 되지 않음.
var x;
x = 3;
console.log(x); // 3 할당이 되었다.




f();
function f(){
  return 'hi';
}
// f 함수는 뒤에 정의되지만 이미 사용할 수 있습니다. 이것은 가독성의 문제도 있지만
// 아주 긴 코드에서 누군가가 위에서 정의했는 함수를 어떤이가 잘못해서 재정의 할 경우 앞에 정의한 함수가
// 호이스팅으로 덮어씌여 무의미하게 될 수 도있습니다.
